buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
        confluentVersion = '5.0.0'
        avroVersion = '1.8.2'
        kafkaVersion = '2.0.0'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.commercehub.gradle.plugin:gradle-avro-plugin:0.14.0")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.commercehub.gradle.plugin.avro"

group = 'com.n2'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "http://packages.confluent.io/maven/" }
}


dependencies {

    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.kafka:spring-kafka')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    compile("io.confluent:kafka-avro-serializer:${confluentVersion}") {
        exclude module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile("org.apache.kafka:kafka-clients:${kafkaVersion}") {
        exclude module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile("org.apache.avro:avro:${avroVersion}") {
        exclude module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

    dependencies {
        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.0.RELEASE'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.0.0'

        testCompile ("org.awaitility:awaitility:3.0.0")
        testCompile("io.confluent:kafka-schema-registry:4.0.0")
        testCompile("io.confluent:kafka-schema-registry:4.0.0:tests")
        testCompile("org.skyscreamer:jsonassert:1.5.0")
        testCompile("com.github.tomakehurst:wiremock:2.17.0")
        testCompile group: 'org.apache.kafka', name: 'kafka-streams', version: '2.0.1'
        testCompile("org.apache.kafka:kafka-streams:1.1.1:test")
        testCompile group: 'org.springframework', name: 'spring-web', version: '5.1.2.RELEASE'

    }
    
    avro {
        fieldVisibility = "PRIVATE"
        createSetters = false
        validateDefaults = true
    }
}

//ext {
//    versions = [
//            springBoot           : '2.0.2.RELEASE',
//            junit                : '4.12',
//            mockito              : '2.8.9',
//            assertJ              : '3.9.0',
//            springFox            : '2.8.0',
//            traceUtil            : '0.7.0',
//            awsSDK               : '1.3.1',
//            jackson              : "2.9.5",
//            spring               : "5.0.6.RELEASE",
//            mapstruct            : "1.2.0.Final",
//            lombok               : "1.16.20",
//            iban                 : "3.2.1",
//            cucumber             : "1.2.5",
//            micrometer           : "1.0.5",
//            powerMock            : "1.7.3",
//            avro                 : "4.0.0",
//            kafka                : "1.1.1",
//            schemaRegistry       : "4.0.0"
//    ]
//    libs = [
//            junit                : "junit:junit:$versions.junit",
//            mockito              : "org.mockito:mockito-core:$versions.mockito",
//            assertJ              : "org.assertj:assertj-core:$versions.assertJ",
//            springValidation     : "org.springframework.boot:spring-boot-starter-validation:$versions.springBoot",
//            springBoot           : "org.springframework.boot:spring-boot-starter:$versions.springBoot",
//            springBootJson        : "org.springframework.boot:spring-boot-starter-json:$versions.springBoot",
//            springBootJpa        : "org.springframework.boot:spring-boot-starter-data-jpa:$versions.springBoot",
//            springBootWeb        : "org.springframework.boot:spring-boot-starter-web:$versions.springBoot",
//            springBootActuator   : "org.springframework.boot:spring-boot-starter-actuator:$versions.springBoot",
//            springBootStarterTest: "org.springframework.boot:spring-boot-starter-test:$versions.springBoot",
//            springWeb            : "org.springframework:spring-web:$versions.spring",
//            springSleuth         : "org.springframework.cloud:spring-cloud-starter-sleuth:2.0.0.RELEASE",
//            springContext        : "org.springframework:spring-context:$versions.spring",
//            jsonAssert           : "org.skyscreamer:jsonassert:1.5.0",
//            fasterXmlClassmate   : "com.fasterxml:classmate:0.8.0",
//            flyway               : "org.flywaydb:flyway-core:5.1.1",
//            h2                   : "com.h2database:h2:1.4.196",
//            mysql                : "mysql:mysql-connector-java:8.0.11",
//            jacksonCore          : "com.fasterxml.jackson.core:jackson-core:$versions.jackson",
//            jacksonAnnotations   : "com.fasterxml.jackson.core:jackson-annotations:$versions.jackson",
//            jacksonDatabind      : "com.fasterxml.jackson.core:jackson-databind:$versions.jackson",
//            jacksonJsonProvider  : "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$versions.jackson",
//            springfoxSwagger2    : "io.springfox:springfox-swagger2:$versions.springFox",
//            springfoxSwaggerUi   : "io.springfox:springfox-swagger-ui:$versions.springFox",
//            swaggerAnnotations   : "io.swagger:swagger-annotations:1.5.19",
//            logStash             : "net.logstash.logback:logstash-logback-encoder:5.0",
//            awsSDK               : "com.amazonaws:aws-xray-recorder-sdk-aws-sdk:$versions.awsSDK",
//            awsSDKInstrumentor   : "com.amazonaws:aws-xray-recorder-sdk-aws-sdk-instrumentor:$versions.awsSDK",
//            awsSQLInstrumentor   : "com.amazonaws:aws-xray-recorder-sdk-sql-mysql:$versions.awsSDK",
//            tomcatJdbc           : "org.apache.tomcat:tomcat-jdbc:7.0.28",
//            wiremock             : "com.github.tomakehurst:wiremock:2.17.0",
//            mapstruct            : "org.mapstruct:mapstruct-processor:$versions.mapstruct",
//            lombok               : "org.projectlombok:lombok:$versions.lombok",
//            iban                 : "org.iban4j:iban4j:$versions.iban",
//            cucumberJava         : "info.cukes:cucumber-java:$versions.cucumber",
//            cucumberJunit        : "info.cukes:cucumber-junit:$versions.cucumber",
//            cucumberSpring       : "info.cukes:cucumber-spring:$versions.cucumber",
//            commonsIO            : "commons-io:commons-io:2.6",
//            micrometerCore       : "io.micrometer:micrometer-core:$versions.micrometer",
//            micrometerPrometheus : "io.micrometer:micrometer-registry-prometheus:$versions.micrometer",
//            elasticSearchClient  : "org.elasticsearch.client:elasticsearch-rest-high-level-client:6.3.1",
//            powerMockAPI         : "org.powermock:powermock-api-mockito2:$versions.powerMock",
//            powerMockJunit       : "org.powermock:powermock-module-junit4:$versions.powerMock",
//            confluentAvro        : "io.confluent:kafka-avro-serializer:$versions.avro",
//            springKafka          : "org.springframework.kafka:spring-kafka:2.1.8.RELEASE",
//            apacheKafka          : "org.apache.kafka:kafka_2.11:$versions.kafka",
//            apacheKafkaTest      : "org.apache.kafka:kafka_2.11:$versions.kafka:test",
//            kafkaClients         : "org.apache.kafka:kafka-clients:$versions.kafka:test",
//            kafkaStreams         : "org.apache.kafka:kafka-streams:$versions.kafka:test",
//            awaitibility         : "org.awaitility:awaitility:3.0.0",
//            schemaRegistry       : "io.confluent:kafka-schema-registry:$versions.schemaRegistry",
//            schemaRegistryTest   : "io.confluent:kafka-schema-registry:$versions.schemaRegistry:tests"
//    ]
//}
