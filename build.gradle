buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
        confluentVersion = '5.0.0'
        avroVersion = '1.8.2'
        kafkaVersion = '2.0.0'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.14.1"
        classpath("com.commercehub.gradle.plugin:gradle-avro-plugin:0.9.1")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.commercehub.gradle.plugin.avro"

group = 'com.n2'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "http://packages.confluent.io/maven/" }
}


dependencies {

    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.kafka:spring-kafka')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    compile("io.confluent:kafka-avro-serializer:${confluentVersion}") {
        exclude module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile("org.apache.kafka:kafka-clients:${kafkaVersion}") {
        exclude module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile("org.apache.avro:avro:${avroVersion}") {
        exclude module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
//    compile('kafka-avro-confluent:kafka-avro-confluent:0.1.0') {
//        exclude module: 'log4j'
//        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
//    }
//    compile('com.google.code.gson:gson:2.2.4') {
//        exclude module: 'log4j'
//        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
//    }
}
